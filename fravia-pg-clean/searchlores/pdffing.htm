<html><head>
<!-- web searching lore: pagename begin -->
<title>pdffing.htm: How to search the web, by fravia+ pdffing</title>
<LINK REL="SHORTCUT ICON" HREF="images/favicon.ico">
<!-- web searching lore: pagename end -->
<meta http-equiv="Content-Type" content="text/html;
charset=iso-8859-1">
<meta http-equiv="Content-Style-Type" content="text/css">
<meta http-equiv="Content-Script-Type" content="text/javascript">
<meta name="description" content="This site teaches basic and
advanced search techniques for people interested in finding any
kind of information on the web. Here are informations, documents,
links, etc. related to web-searching">
<meta name="keywords" content="searching, combing, klebing, how
to search, search techniques, hints and tips for searching the
web, How do I learn to search?, Advanced Internet searching, How
do I search the web?, fravia+">
<meta name="author" content="fravia+">
<meta name="copyright" content="Copyright(c) 1952-2032 fravia+">

<style type="text/css">
A:link { color: #02F }
A:visited  { color: #808 }
A:hover { color: purple; background: #AFB }
</style></head>
<body bgcolor="#cccccc" text="#001010" link="#214131" alink="#405040" vlink="#8850aa">
<center>
<table border="0"><tbody><tr><td><center>

<table border="0"><tbody><tr><td><center>
<!-- fravia's searching lore: bigtitle, begin -->
<font size="+3">~ Those annoying pdf files ~</font>
<!-- fravia's searching lore: bigtitle, end -->
<br>
<!-- internet searching techniques: imageheader begin -->
<table border="0" align="center"><tbody><tr>
<th bgcolor="#993300">�����</th>
<th bgcolor="#993300">��</th>
<th bgcolor="#993300"><a href="intro.htm"><img src="images/begiptit.jpg" alt="Petit image" align="bottom" width="118" height="68" border="0" vspace="0" hspace="0"></a></th>
<th bgcolor="#993300">��</th>
<th bgcolor="#ff0000"><font color="#993300" size="3">
Those<br>annoying<br>pdf files</font></th>
</tr></tbody></table>Version <font color="blue">August</font> 2005
<!-- internet searching techniques: imageheader end -->
</center></td><td>
</td></tr></tbody></table> 
</center></td><td>��</td><td><center>
<a href="pdffing.htm#intro">Introduction</a>  
��
<a href="pdffing.htm#essa">PDF-related essays</a> 
<br>
<a href="pdffing.htm#ashok">Converting any file to PDF</a> 
<br>
<a href="pdffing.htm#first">Converting an Acrobat PDF into ASCII</a> 

<br>
<a href="pdffing.htm#modern">The modern art of HTML2PDF conversion</a> 
<br>
<a href="pdffing.htm#second">Enabling Print-Challenged PDF Files</a>  
<br>
<a href="pdffing.htm#mine1">The use of pdf2txt@adobe.com</a>  
<br>
<a href="pdffing.htm#heather">De-protecting PDF files</a>
��
<a href="pdffing.htm#tools">PDF tools</a>  

    <br>
<a href="pdffing.htm#liposuction">Cleaning Adobe bloated reader 6</a> <br>
<a href="pdffing.htm#reapp">"Remote Approach" pdf malware</a>

      
                  
</center></td></tr></tbody></table>
    
<hr>
<a target="_top" href="http://access.adobe.com/adv_form.html">Adobe�PDF2HTML:</a>
<br>
<form action="http://access.adobe.com/perl/convertPDF.pl" method="post" enctype="x-www-form-urlencoded">
URL:	<input type="text" name="url" size="25">
���EventualDocPasswd:<input type="password" name="password" size="25" maxlength="50">
<br>
Pages:	<input type="text" name="first_page" size="5">
to:	<input type="text" name="last_page" size="5">
<select name="extract_order"><option selected="selected" value="-d">1..9</option><option value="-x">9..1</option></select>
<input type="checkbox" name="reflow_p" value="checkbox">�Reformat
<input type="checkbox" name="clear_p" checked="checked" value="checkbox">�&amp;Tags;
<input type="submit" value="Convert!">
</form>

<br>
<TABLE border=3>
  <TBODY>
  <TR>
    <TD><center><font size=+3>Ta-daaa!</font><br><br>&nbsp;&nbsp;Joseph Cox's <font color=blue>Adobe Reader Speed-Up</font> (v1.31): <FONT color=blue>[</FONT><A 
      href="zipped/ar-speedup.zip">ar-speedup.zip</A><FONT 
      color=blue>]</FONT> : 149 Kbytes zipped&nbsp;&nbsp;<br><br>
      disables the majority of plugins (that are 
completely useless)&nbsp;&nbsp;<br> hence adobe, should you really be compelled to use it, will start in a wiff&nbsp;&nbsp; 
<TD width=74 bgColor=#183d6b rowspan="2">
      <CENTER>&nbsp;&nbsp;<IMG height=64 alt=sole1 src="images/sole1.gif" 
      width=64 align=center> &nbsp;&nbsp;&nbsp;&nbsp;<BR><FONT face=Arial 
      color=#cc9933>Precious<BR>Item</FONT> 
      </TD></TR>
</TBODY></TABLE> 

<a name="pdfrea"></a>    
           <br><br><b>A free, alternative and quick pdf reader instead of Adobe's monstruosity:</b><br>  
           <a href="http://www.foxitsoftware.com/pdf/rd_intro.php">Foxit PDF reader</a>: Free and QUICK reader 
           for PDF documents. You can view and print them with it.<br> 
                   Its small (less than 1MB download. 
                   It doesn't need any lengthy installation, so you can start to run it as soon as you have downloaded it.
                   It finds text inside the pdf documents, select it and copy.
<br>
And it starts up immediately, so you don't need to wait ages for many lengthy useless dlls loading or for an  annoying "Welcome" screen to disappear.
           <br><br>
And if you really want to create your own pdf-files...<br>
<a href="http://sourceforge.net/projects/pdfcreator/">PDFCreator</a> easily creates PDFs from any Windows program. Use it like a printer in Word, StarCalc or any other Windows application.
<br>
<a name="intro"></a>
<table border="1" width="88%"><tbody><tr><td bgcolor="#c6e7c6"><center><font size="+2">Introduction</font></center></td></tr></tbody></table>
</center><br><font size="+1">

  Ok, zugegeben: pdf files are a pain in the stomach: cumbersome, 
difficult to grep, search, and automate for retrieval, awkward for cut and pasting purposes, 
clogging down your computers with the Acrobat overload. But they have also some 
positive aspects, of course, hence people still use them, 
and you will find USEFUL pdf-files every now and then on 
the web - see for instance the very important 
altavista's  <br></font><center>
<font size="+1"><a href="library/sdk_v26.pdf">Search Intranet Developer's Kit (Ver. 2.6, April 1999)</a></font></center><font size="+1"> 
        And all other pdf files in our <a href="library.htm">library</a>.
<br><br>Evidently -once found- you may want to fiddle with them: use them, catalogue them, grep 
them, whatever.<br>But, alas, 
pdf files, are annoying: they can be write protected, password protected, 
whatever. Searchers should, of course, know how to overcome these small annoyances.<br>
Also, Carpathia pointed out this  a useful tool for a lot of multiformat conversions:<br>
<a href="http://wheel.compose.cs.cmu.edu:8001/cgi-bin/browse/objweb">http://wheel.compose.cs.cmu.edu:8001/cgi-bin/browse/objweb</a> 
<br>Enjoy!         

<br>    <br>
<a name="essa"></a></font><center>
<table border="1" width="88%"><tbody><tr><td bgcolor="#c6e7c6"><center><font size="+2">PDF-related essays</font></center></td></tr></tbody></table>
</center><font size="+1"><br>

</font><ol>

<li>
<font size="+1"><img src="images/bulletr.gif" alt="red" align="bottom" width="13" height="13" border="0" vspace="0" hspace="0">��<font color="blue">[</font><a href="son_font.htm">son_font.htm</a><font color="blue">]</font>: 
 <i>An essay on identifying and getting ahold of fonts</i><br>by <u>sonof</u>, february 2003  
part of the <font color="blue">[</font><a href="essays.htm">Essays</a><font color="blue">]</font>, 
of the <font color="blue">[</font><a href="pdffing.htm">pdf</a><font color="blue">]</font>, 
and of the <font color="blue">[</font><a href="targets.htm">Targets</a><font color="blue">]</font> sections. 
<br>With a script to extract fonts from pdf files
</font></li>

<li>
<font size="+1"><font color="blue">[</font><a href="pdffing.htm#heather">getting a non-protected PDF file</a><font color="blue">]</font> by heather spoonheim  (September 2002)
</font></li>

<li>
<font size="+1"><font color="blue">[</font><a href="pdffing.htm#ashok">Converting Word-Docs 
(or anything you like) to PDF</a><font color="blue">]</font> Some tips by 
<a href="http://www.hazard0us.org/">ashok 
hariharan</a> and other common knowledge methods
</font></li>

<li><font size="+1"> 
<font color="blue">[</font><a href="pdffing.htm#mine1">The use of pdf2txt@adobe.com</a><font color="blue">]</font> by fravia+ (September 2000)
</font></li>

<li>
<font size="+1"><img src="images/bulletr.gif" alt="red" align="bottom" width="13" height="13" border="0" vspace="0" hspace="0">��<a href="pdffing/pdfessa.htm">How to create PDF-Files 
</a><br>
from any application that allows printing<br>
<i>(The GSview approach)</i><br>by hassan, May 2000
</font></li>
<font size="+1"> 
<li>  
<font color="blue">[</font><a href="pdffing.htm#first">Converting an Acrobat
PDF into ASCII</a><font color="blue">]</font> by Wolfgang Redtenbacher  (March 2000)
</li>
  
<li>   
<font color="blue">[</font><a href="pdffing.htm#second">Enabling
Print-Challenged PDF
Files</a><font color="blue">]</font> by Kayaker (March 2000)
</li>

<li>
by Zer0+,  November 1997<br>       
<img src="images/bulletr.gif" alt="red" align="bottom" width="13" height="13" border="0" vspace="0" hspace="0">
<a href="pdffing/zeropdf.htm">Quick starting notes and pdf again</a><br><i>                                   
(boolean variables inside PDF files)</i><br>
</li>

<li> 
by Ragica,  November 1997<br>       
<img src="images/bulletr.gif" alt="red" align="bottom" width="13" height="13" border="0" vspace="0" hspace="0"><a href="pdffing/ragica1.htm" tppabs="http://fravia.net/ragica1.htm">A Response to +ORC's Message Regarding reversing PDF</a><br>
the biggest collection ever (in fact
the only collection ever so far!) of information regarding hacking
PDF and links to relevant information<br><i>                                   
(Kevin Lair CGI-hacks, the  GhostScript hack, many good starting point for the USER crack)<br></i>
</li>

<li>  
by SiuL+Hacky,  November 1997<br>       
<img src="images/bulletr.gif" alt="red" align="bottom" width="13" height="13" border="0" vspace="0" hspace="0"><a href="pdffing/linux2.htm">Linux cracking: the live approach 
(acrobat reader)</a><br>
Linux advanced reverse engineering: imported functions<br>
</li>

<li>  
by Snatch,  November 1997<br>       
<img src="images/bulletr.gif" alt="red" align="bottom" width="13" height="13" border="0" vspace="0" hspace="0"><a href="pdffing/snatch_2.htm">Cracking all nag-screen and time-trial protections 
(Aerial32 as example)</a><br>
(Resource-ID fishing)<br> 
</li>

<li>           
by JimBob,  October 1997<br>       
<img src="images/bulletr.gif" alt="red" align="bottom" width="13" height="13" border="0" vspace="0" hspace="0"><a href="pdffing/jimbob.htm">The Aerial trick</a><br>
How to crack any pdf security setting<br>
<i>(The Aerial RTF format converter)</i><br>
</li>

<li>
by zeezee,  October 1997<br>       
<img src="images/bulletr.gif" alt="red" align="bottom" width="13" height="13" border="0" vspace="0" hspace="0"><a href="pdffing/zeepdf.htm">Create PDF documents for free reversing Adobe PDF Writer</a><br>
You know how to create .pdf documents? No? I will -shortly- explain it<br>
<i>(another nice HIEW lesson)</i><br>
</li>  
</ol>



<a name="ashok"></a></font><hr><center>
<table border="1" width="88%"><tbody><tr><td bgcolor="#c6e7c6"><center><font size="+2">Converting Word-Docs 
(or anything you like) to PDF</font></center></td></tr></tbody></table></center>

<br><br>

<font size="+1"><font size="+2">Converting Word-Docs (or anything you like) to PDF</font><br>
<br>
The word document is a very lousy format -- it just takes up 
too much
space.  <br>Now you can convert all your huge documents to liteweight pdfs.
Just follow the following steps blindly :<br>
1) Goto the start menu -&gt; settings -&gt; printers and select 'Add Printers'<br>
2) Select 'Local Printer' when it prompts you for a local or network printer.<br>
3) From the list of printers select any printer ending with 'PS' , 
this indicates that the printer has PostScript support. I generally chose 
something like 'HP Color Laserjet 5/5M PS'.<br>
4) Click Next and in the next screen select the Port as FILE:.<br>
5) Click Next again and finish. (Say no to default printer).<br>
6) Download and install GhostView from http://www.cs.wisc.edu/~ghost/<br>
7) Now launch the Word Document that you want to convert to PDF in 
winword.<br>
8) In winword select File-&gt;Print.  In the printer name select the name of
the printer that you just added. and check the option 'Print to file'. Now 
click OK.<br>
9) In the 'Print to File' Save As dialog save the file to a folder as filename.prn.<br>
10)Now launch ghostView .<br>
11)Use file-&gt;open to open filename.prn in GhostView.<br>
12)Now use file-&gt;print.  The printer setup dialog is displayed.<br>
13)Select 'device:' as pdfwrite, select 'resolution:' as 300 , select 
'Print to File'  and click ok, enter the output file name when prompted as
your filename .pdf. <br>
14)Thats it ! you can now view your old word document as a PDF file in 
acrobat reader.
<br>
<br> <hr>There are other tools that may come useful:<br>
<a href="http://www.quiss.org/swftools/">sfwtools</a> converts anything (also pdf files) to swf


<br>
<br> <hr>Yet there are many other methods:<br>
One of the simplest ways
to convert into pdf is to use the software <font color=blue>OpenOffice</font> which is available at
 <a href="http://www.openoffice.org">openoffice.org</a>.
                 <br><br>
It is a great replacement for Micro$oft Office package. Use the text
editor in OpenOffice and simply click on "<font color=blue>export as pdf</font>". Within a few
seconds (depending on the size of your file), the PDF document is
created.    <br><br>

Open office does a lot more.  <br>
+ it replaces the entire Micro$soft office package for home users. <br>
+ It dispenses the need for using Word for composing documents <br>
+ it is only a little over 60 MB   <br>
+ It is free  <br>
+ It is Open source   <br>
+ And, again, you can create PDF files by the mere click of a button.

<br><hr><br>
   Another possibility is the <font color=blue>Win2pdf</font> package, available at <a href="http://www.daneprairie.com">http://www.daneprairie.com</a>, 
     It also installs as windoze print driver, so all you need to do is to <font color=blue>print</font> from 
     <u>any application</u> to create a PDF file.   Unregistered versions are free for non commercial use.
<br><br>

<a name="first"></a></font><hr><center>
<table border="1" width="88%"><tbody><tr><td bgcolor="#c6e7c6"><center><font size="+3">Converting an Acrobat
PDF into ASCII</font></center></td></tr></tbody></table></center>

<font size="+1"><br>
Thank to Wolfgang Redtenbacher for the bulk of the following
advices about        
     converting an Acrobat PDF
file into ASCII text<br></font><hr width="44%">

<font size="+1">Several
solutions like using Ariel (that can be easily cracked) and
sending an e-mail to "pdf2txt@adobe.com" have been
suggested.<br><br>

What does not seem to be known widely, however, is the fact that
there exist freeware programs to convert PDF to TXT locally.
   </font><ol>
<li><font size="+1"> One solution is to download Acrobat 4.0 (ca. 6 MB) from
   www.adobe.com, plus the accessibility plug-in (ca. 1.2 MB)
   from "access.adobe.com". This plug-in permits you to load a
   PDF file into Acrobat and save it as .TXT or .HTM.

</font></li><li><font size="+1"> An even better solution (regarding program size and
conversion
   quality) is the program "pdftotext" which is part of the
   XPDF-package (a freeware PDF viewer for several operating
   systems).</font></li></ol>

<font size="+1">   You need to download the following files:
 <br><br>
   DOS: ftp://ftp.foolabs.com/pub/xpdf/xpdf-0.90-dos.zip
          (1298148 bytes) and <br>
        ftp://ftp.cdrom.com/pub/infozip/MSDOS/gzip124.exe
          (119146 bytes)<br><br>

   Win32: ftp://ftp.foolabs.com/pub/xpdf/xpdf-0.90-win32.zip
            (584326 bytes) and <br>
          http://www.gzip.org/gzip124xN.zip
            (62203 bytes)
                   <br><br>
   After unpacking, you only need 1 file from each of the
   archives (either DOS or Win32):
        <br><br>
   pdftotext.exe (964341 bytes/DOS resp. 354304 bytes/Win32)
   gzip.exe (39910 bytes/DOS resp. 91648 bytes/Win32)
      <br><br>
   Move these 2 files into a directory that is in your search
   path (environment variable PATH= ...), enter the command
   "pdftotext xyz.pdf", and within seconds you get an ASCII
   text conversion result in the file "xyz.txt" ("xyz" has to be
   replaced by the real file name, of course).
         <br><br>
   NOTE: While the Win32 version of "pdftotext.exe" is more
   compact than the DOS version (which contains additional DOS
   extender code), it does not work with the widespread DOS
   version of "gzip.exe" as it needs gzip with long file name
   support. Therefore make sure to use either both programs in
   the DOS version or both in the Win32 version. (The DOS version
   runs flawlessly on a Win32 platform - it is just a bigger
   EXE-file.)

<br>         
    

<a name="modern"></a>
</font><hr>
<center><table border="1" width="88%"><tbody><tr>
<td bgcolor="#c6e7c6"><center><font size="+3">The modern art of HTML2PDF conversion</font></center></td></tr></tbody></table>
</center><font size="+1"><br>by Christian Wolfgang Hujer<br><br></font>

            <pre>
Hello,

&gt;&gt; <font color=blue>where can i find source code for converting html files</font>
&gt;&gt; <font color=blue>to pdf format, source code being in java.</font>

several tools exist for that purpose.

I searched in google for &quot;HTML Java PDF Conversion&quot;.

I found iText, which is an open source PDF library in Java that already has 
capabilities of converting HTML to PDF.
On
<a href="http://www.lowagie.com/iText/links.html">http://www.lowagie.com/iText/links.html</a>
are links to several other PDF engines in Java.
iText is an open source project hosted on sourceforge.

But the &quot;modern art of HTML2PDF conversion&quot; is the 
following:
1. Make sure the HTML files are valid XHTML (or at least well-formed XML).
2. Use a transformation stylesheet that transforms HTML to XSL Formatting 
Objects using XSL Transformation. Apply that stylesheet using an XSLT 
processor like xt, xalan, saxon...
3. Run a Formatting Objects engine (like FOP from James Tauber / Apache 
Group) that converts the generated FO-Tree from step 2 to PDF.

Most XSLT processors and most Formatting Objects engines are written in Java, 
including all mentioned products (xt, xalan, saxon, fop) and come with their 
source code.

The following points must be kept in mind:
- - Knowledge
XSLT and XSL:FO are 1-4 new languages to learn (depends on the point of view 
and your knowledge, my opinion is that it's four languages altogether: XML, 
XPath, XSLT and XSL:FO, but these are quite easy languages)
- - Development speed
XSLT Stylesheets and XSL Formatting are quite easy to learn and very quick to 
develop.
It takes only few time to write an XSLT stylesheet.
- - Servlet Usage
XSLT and XSL:FO are usable as servlets.
- - Performance
Java native library performance might be considerably better.
- - The XSLT and XSL:FO is highly configurable. You control nearly every pixel 
(resp. point) of the resulting PDF.

But I've never used the non-XSL:FO way, so I can't say much about that.


Just my 2 cents.

Greetings

- -- 
Christian Wolfgang Hujer
</pre>


<a name="second"></a>
</font><hr>
<center><table border="1" width="88%"><tbody><tr><td bgcolor="#c6e7c6"><center><font size="+3">Enabling Print-Challenged PDF Files</font></center></td></tr></tbody></table>
</center><font size="+1"><br>
Enabling Print-Challenged PDF Files<br><br>I've seen a number of
queries recently about printing PDF files when the<br>Document
Security doesn't allow printing, so I thought I'd pass this
along<br>before I file it with my notes.<br><br>With Acrobat
Reader 4.0 all that is required is to enable the Print menu
item,<br>enable it - you print.  There is no second check before
it goes to the code that<br>actually calls the Print Common
Dialog!  This is different from Acrobat Reader 3.x,<br>where there
is a second check, which stupidly gives you a Message Box
saying<br>"This Operation is Not Allowed" if you try clicking on
your newly enabled Print <br>function.  By saying essentially "You
shouldn't have been able to do this", it<br>gives you the reverser
something to work with to bypass it of course.<br><br>The check
for whether printing is allowed occurs as soon as you click on the
File<br>drop down menu.  I was using the Building Win95 Apps PDF
by Kevin Goodman which is<br>available here and there.<br><br>You
all know the Win32 API function EnableMenuItem of
course:<br><br>The EnableMenuItem function enables, disables, or
grays the specified menu item. <br><br>BOOL
EnableMenuItem(<br><br>    HMENU hMenu,	// handle to menu<br>   
UINT uIDEnableItem,	// menu item to enable, disable, or gray<br>   
UINT uEnable	// menu item flags<br>    <br>The 2nd parameter
specifies the menu item under question and will be either
the<br>identifier of the menu item if given by the uEnable
parameter MF_BYCOMMAND flag,<br>or the relative position of the
menu item if given by the MF_BYPOSITION flag.<br>The MF_BYPOSITION
flag is normally used.<br><br><br>We can find out the position of
the Print menu item in the drop down list with:<br><br>The
GetMenuItemID function which retrieves the menu item identifier of
a menu<br>item located at the specified position in a menu.
<br><br>UINT GetMenuItemID(<br><br>    HMENU hMenu,	// handle of
menu<br>    int nPos	// position of menu item<br>    <br>If a
regular menu item, the Return Value is an identifier.<br>If a
submenu, the Return Value is 0xFFFFFFFF.<br>If a separator, the
Return Value is 0.<br><br>If you cycle through the GetMenuItemID
function by setting a breakpoint on the<br>2nd parameter (the 1st
parameter PUSHed in SoftIce), you see an interesting
pattern<br>forming.  The first item in the drop down list is given
the position # 0 (hex) and<br>an identifier as a return value, the
second #1 and so on, including the separators.<br><br>The
following table can be made (and I apologize for the /PRE
formatting spacing):<br><br>
</font><pre><font size="+1">Position	Identifier	Menu Item<br>
0		1770		Open
1		0		Separator
2		1772		Close
3		0		Separator
4		1774		Page Setup
5		1775		Print
6		0		Separator
7		FFFF		Document Info (submenu)
8		FFFF		Preferences (submenu)
9		0		Separator
A		1783		Adobe Online
B		0		Separator
C		1785		Recent File 1
D		17CC		Recent File 2 (up to 4 files)
E		0		Separator
F		1787		Exit</font></pre>

<font size="+1"><br><br><br>So, without even going to this trouble we
can deduce what the BYPOSITION position<br>value will be for that
2nd parameter of EnableMenuItem simply by counting the<br>number
of menu items, including separators, in the drop down
list.<br><br><br>OK, now what?  We know that somewhere between the
time the identifier (1775) is<br>allocated to the Print menu item
by GetMenuItemID, and the EnableMenuItem function<br>is called,
there is a check to see if this file is actually supposed to be
printable.<br><br>So how about doing a TRACE between the two and
see what's going on?<br><br>We want the first break to be when the
2nd parameter of GetMenuItemID (the first<br>parameter PUSHed) is
equal to 5 (the position number of Print in the drop down
list).<br><br>The address of the 1st parameter on the function
call stack is given by (ESP+4),<br>the 2nd by (ESP+8), so this
works:<br><br><br>BPX GetMenuItemID IF *(SS:ESP+8)==5<br><br>If we
set up a macro to display this address in the data window we can
verify it<br>broke at the right time:<br><br>MACRO Position = "dd
SS:ESP+8"<br><br>and the first BPX can become:<br><br>BPX
GetMenuItemID IF *(SS:ESP+8)==5 DO "Position"<br><br>Break here,
F11 and notice the menu identifier (1775) in EAX and the position
(5)<br>in the first line of the data window.<br><br><br>Set up the
second breakpoint similarly:<br><br>BPX EnableMenuItem  IF
*(SS:ESP+8)==5 DO "Position"  <br>(again, we are looking at the
2nd parameter on the stack)<br><br><br>Then set up the Trace.  You
may want to increase the Trace Buffer size from the<br>default of
8K.<br><br>TASK will give the Taskname Acrord32<br><br>BPRW
Acrord32 T  will set the trace<br><br><br>Press F5 and you will
break back into SoftIce after the code between the two<br>function
calls has been executed. F11 to return to Acrord32.  You might
temporarily<br>toggle out the Register/Data/Code windows with
WR/WD/WC and maximize LINES before<br>typing SHOW to display the
trace.<br><br>SHOW 1 will show the last command
executed
</font><pre><font size="+1">000001  0137:0054C117  FF159C295700    CALL  [USER32!EnableMenuItem]</font></pre>
<font size="+1">and you can use the arrow keys to
scroll up and down.<br><br>A full screens' worth of this trace
gives a nice screendump with the Icedump<br>PAGEIN N
c:\filename.txt command.<br><br>Looking back through the trace
code, you quickly see a suspicious jump.  You can<br>patch this or
force EAX to 1 a few lines back by changing<br><br>SBB EAX,
EAX<br>INC EAX       (EAX=0)<br> <br>into<br> <br>XOR EAX, EAX                   
<br>INC EAX       (EAX=1)<br><br><br>I won't give the actual
addresses to patch, as that would take the fun out
;-)<br><br>Please correct any mistakes I might have
made.<br><br>Cheers,   
Kayaker
<br>
      

<!-- BEGIN decryption -->
<a name="mine1"></a><hr><center>
<table border="1" width="88%"><tbody><tr><td bgcolor="#c6e7c6"><center><font size="+3">The use of pdf2txt@adobe.com</font></center></td></tr></tbody></table></center>
<br>
This is an extract from an email I made some time ago... common knowledge (see also 
Wolfgang Redtenbacher's contribution, but hey! it works fine for me!<br>
<br>
More and more documents are stored in Adobe's pdf format on the Web.
<br><br>
That may be fine for frill-formatting purposes, but quite annoying for the rest 
of us, since pdf files are quite cumbersome for cut &amp; paste and for search &amp; grepping 
purposes.
I have realized that many don't know that there's a nice (email) utility by 
Adobe itself for those of you that prefer plain *.txt files (that can be searched, 
cutted, pasted or grepped <i>ad libitum</i>).
<br><br>
Simply send an email with your pdf files attached (i.e. use the "insert file" option) 
to the following email address: <br>
<font color="red"><font size="+3"><br>
pdf2txt@adobe.com <br>
</font></font><br>
You don't need to send either text or subjects. 
<br><br>
After a couple of minutes: "Hey bingo!"  you'll get your text 
file emailed back to you (for free of course).
<br><br>Also useful: <a href="http://www.adobe.com/products/acrobat/access_email.html">http://www.adobe.com/products/acrobat/access_email.html</a>: Adobe PDF conversion by e-mail   
<br><br>
          
<!-- BEGIN decryption -->
<a name="heather"></a><hr><center>
<table border="1" width="88%"><tbody><tr><td bgcolor="#c6e7c6"><center><font size="+3">getting a non-protected PDF file</font></center></td></tr></tbody></table></center>
<br>
 I received the following from  heather spoonheim (September 2002):<br>
<br>

+Fravia;
   <br><br>
I have been following your site since early 1999, and
am not sure just how active you are, but, I thought I
would send a quick note as an addendum to the PDFFING
page.
      <br><br>
Something that was not mentioned was just how simple
getting a non-protected PDF file from a protected PDF
file really is.
       <br><br>
First I did some searching and found out that
non-printing was actually up to the PDF viewer.  That
means the software is requested by the document to not
print the document, and the software honours the
request.  What does this mean?  It means that if you
have the source to a viewer, you can tell it to ignore
the request.  Just do a search for open source PDF
viewers, and you find xpdf, just like on your PDFFING
page.  You now have the source for PDF software.  
       <br><br>
To create your own PDF software that ignores the
"print disable" information, edit the pdftops.cc file.
Find this section of the file:
             </font><pre><font size="+1">  // check for print permission
  if (!doc-&gt;okToPrint()) {
    error(-1, "Printing this document is not
allowed.");
    goto err1;
  }
                </font></pre>
<font size="+1">Comment out that block, compile, and presto, whammy,
you can convert the the .PDF to .PS using the
pdftops.exe program.  
               <br><br>
What to do now?  Well, all laser printers understand
.PS files, so you can just do a dump from the command
line to the printer, or you can run Adobe Distiller on
the file, and create a new PDF, or you can run
Ghostscript on the file.  Anything you want.
               <br><br>
ps: To compile on a M$ platform you need either
MSVC(big bucks), or DJGPP(free as in speech).  I
didn't try with BCC (free as in beer), but it would
probably work also.  The ms_make.bat file that comes
with the source package worked flawlessly for me the
first time.
        <br><br>
<br>
                   </font>
   



<!-- BEGIN tools -->
<a name="tools"></a><center>
<table border="1" width="88%"><tbody><tr><td bgcolor="#c6e7c6"><center><font size="+3">PDF 'tools'</font></center></td></tr></tbody></table></center>
<br>
<a href="zipped/apdfprp.zip">Advanced PDF Password Recovery Pro 2.12</a>:<br>
Decrypt protected Adobe Acrobat PDF files, which
have "user" and/or "owner" passwords set,
preventing the file from opening or editing,
printing, selecting text and graphics etc.  

<br><br><br>
<a href="zipped/gym_full.zip">Gymnast 3.5 (build 149)</a>:<br>  
       

<a href="http://www.oakworth.demon.co.uk/gymnast.htm">Gymnast</a> converts text files to Adobe Acrobat PDF format without the need for 
any additional Adobe software.
<br> The alternative to the full Acrobat suite (which is relatively 
easy to find on the web: search for 
KWW500R7150122-128 or for acroba5 .zip / .rar / .ace): 
Gymnast supports hyperlinks, annotations, and automatic generation 
of bookmarks from headings.  You can even include links to Web sites 
and other PDF files. Produce professional-looking 
documents for the Web.  Development stopped end 1999.
<br>
Now freeware: Use this key to register your full copy:
<font color="blue">GYM03-35672-11110-33170</font>   

<br><br>GNU-Linux free pdf-viewers: <a href="http://lwn.net/Articles/113094/ ">http://lwn.net/Articles/113094/ </a> (GNOME Ghostview (ggv), kghostview,
xpdf, gpdf, kpdf)
      
             <br><br><br>

<a name="liposuction"></a><center>
<table border="1" width="88%"><tbody><tr><td bgcolor="#c6e7c6"><center><font size="+2">Cleaning Adobe bloated reader 6</font></center></td></tr></tbody></table>
</center><br><font size="+1">

             <br>
                 <center>
             
             <font color=blue size=+2>How to use liposuction to repair Adobe Reader 6</font> <br>
<font color=blue size=+2>And give it mouth-to-mouth respiration too</font> 
     <br>
<br>(<a href="http://www.theinquirer.net/?article=11041">article</a> by <a href="http://www.alltheweb.com/search?avkw=fogg&advanced=1&cat=web&jsact=&_stype=norm&type=all&q=%22Fernando+Cassia%22&_b_query=&l=en&ics=utf-8&cs=utf-8&wf%5Bn%5D=3&wf%5B0%5D%5Br%5D=%2B&wf%5B0%5D%5Bq%5D=&wf%5B0%5D%5Bw%5D=&wf%5B1%5D%5Br%5D=&wf%5B1%5D%5Bq%5D=&wf%5B1%5D%5Bw%5D=&wf%5B2%5D%5Br%5D=-&wf%5B2%5D%5Bq%5D=&wf%5B2%5D%5Bw%5D=&dincl=&dexcl=&geo=&limip=&doctype=&dfr%5Bu%5D=on&dfr%5Bd%5D=1&dfr%5Bm%5D=1&dfr%5By%5D=1998&dto%5Bd%5D=31&dto%5Bm%5D=1&dto%5By%5D=2004&size%5Bp%5D=&size%5Bv%5D=&size%5Bx%5D=0&hits=100&nooc=off">Fernando 
Cassia</a> taken 
             from <a href="http://www.theinquirer.net">The Inquirer</a> and published on <a href="http://www.searchlores.org">searchlores</a>   in
             february 2004)
<br>
           <br><br> </center>


I reported some time ago on the
slooooooow nature of Adobe's latest version of the acrobat (.pdf)
reader, recently renamed "Adobe Reader" by their marketing
spinmeisters. See "<a href="http://www.theinquirer.net/?article=9896">Adobe's quiet release of Reader software causes
people to scream</a>".
              <br><br>
And just a few days an e-mail from a reader, Kelly Cook, sneaked
into my inbox, claiming to have found a way to trim the fat off
Adobe Reader 6, and improving its load time to more reasonable
levels. Apparently the reader spotted this info on a Mac-related
blog and decided to try it on the Windows version. I have tried it
myself and guess what, it worked.
            <br><br>
On my tests, I decided to use the "lowest of the low-end" system:
my Thinkpad 380ed with a Pentium I-MMX class CPU. Before the
liposuction, Adobe Reader 6 took 41 seconds to load (without any
PDF file), after the fat-removal procedure, it took 20 seconds. On
high-end systems, however, the results are more dramatic: Kelly
claims Adobe Reader 6 took over 20 seconds to load on a 1.8 Ghz.
Pentium 4 system, and just under two seconds after the procedure.
        <br><br>
So here are the dirty details

     <br><br>

Install Adobe Reader 6 :)  <br>
From the Start->Run windows menu, Open the "x:\Program <br>
Files\Adobe\Acrobat 6.0\Reader" folder, where x is the right drive
letter.  <br>
Find the plug_ins folder and rename it plug_ins_disabled  <br>
Create a new folder named plug_ins   <br>
Copy the following files from "plug_ins_disabled" to "plug_ins":
EWH32.api, printme.api, and search.api      <br><br>



Of course this will limit the functionality to viewing
non-encrypted pdf files, but that's exactly what I want Acrobat
^B^B^B^B^B Adobe Reader for, 99.9% of the time. You might want to
experiment leaving some of the fat in, I mean, .API files, like
reflow.api and search5.api (if it's there), and see how it affects
functionality and load times.  <br><br>

With the files listed, you get half the load time on low-end
systems, and a 2-sec load time on high-end ones. Still, you might
want to prefer using Acrobat Reader 4.05 on old systems, since it
loads in just seven seconds instead of 20.
      <br><br>
Your mileage might vary. Liposuction is a dangerous clinical
procedure. Consult your doctor. All lawsuits and claims should go
not to me, but to our editor and our reader Kelly. ;)
            
          <br><br><br>

<a name="reapp"></a><center>
<table border="1" width="88%"><tbody><tr><td bgcolor="#c6e7c6"><center><font size="+2">"Remote Approach" pdf malware</font></center></td></tr></tbody></table>
</center><br><font size="+1">
  <font color=blue>"Remote Approach" pdf malware</font><br><br>
  The following taken from <a href="http://lwn.net/Articles/129729/">http://lwn.net/Articles/129729/</a>
             
<pre>
Unexpected features in Acrobat 7

(This article was contributed by Joe 'Zonker' Brockmeier)
	
Linux users may have been pleased to find that Adobe has finally
made available a new version of its Acrobat Reader, with
accessibility features, a much slicker interface than Acrobat 5.x
and new and other spiffy features. However, there are a few other
features that Linux users should be aware of.

A company called Remote Approach is promising to alert PDF
publishers as to the "reach and use of their materials." We were
curious to find out how Remote Approach was going to make good on
its promise, given that PDF has largely been seen as a one-way
medium. To find out, we created a test account and uploaded a PDF
to be "tagged" by Remote Approach, and then downloaded the
modified document to see whether Remote Approach could log our use
of the document.

Remote Approach's reporting did not work when we viewed the
document with Kpdf, Xpdf and Adobe Reader 5.0.10. It also failed
using Apple's "Preview" application on Mac OS X. The document was
still viewable with no apparent glitch in other PDF readers, but
the reporting function did not work. However, when we opened the
file using Adobe Acrobat Reader 7, Remote Approach started logging
views from our IP address. After doing a little research, we found
that Adobe's Reader was connecting to
http://www.remoteapproach.com/remoteapproach/logging.asp each time
we opened the document. The information is submitted over port 80
using HTTP, so it is unlikely that a home or office firewall
would, in a normal configuration, block the activity, unless the
firewall administrator is attempting to block Web browsing.

Apparently, Remote Approach's "tag" to our document included the
addition of JavaScript code causing Acrobat to report back to
their server; the information reported includes the fact that the
document had been read, our IP address, and which viewer it had
been read in. (Interestingly, Remote Approach does not seem to
recognize the Linux version of Acrobat Reader, as it left the
"User Agent" field blank in its reports.)

What many Linux users may not have realized, since Adobe did not
release an Acrobat Reader 6.x for Linux, is that Adobe has added
JavaScript support to PDF and the official Acrobat readers since
Acrobat 6.x. For those interested in the JavaScript support and
its abilities in Acrobat, see Adobe's scripting reference or
scripting guide. (Both are PDFs, of course.)

By default, Adobe Reader 7 turns on JavaScript, so the "tagged"
document is able to "phone home" without the user's awareness.
Turning off JavaScript disables the document's code, and prevents
Remote Approach (or any other entity) from tracking views of the
document. No doubt, Remote Approach is using features that would
normally be used to submit information from a PDF form.

The inclusion of JavaScript in Adobe Reader 7 for Linux no doubt
provides a number of welcome features for users, but it also
raises some privacy issues. The reader does not inform the user
that information is being submitted, so users are likely to be
oblivious to the fact that another party is aware of their PDF
reading habits. While a user may not find it objectionable to
notify the publisher, there are those of us who don't care to
allow publishers to snoop on activities taking place on our
personal computers.

Lucky for us, there are plenty of alternatives to Adobe's Reader.
Free PDF readers are unlikely to adopt features allowing the
reader to silently phone home in response to code stored within
the document itself. If you must use Acrobat, however, you may
want to have a look at the JavaScript settings first.
</pre>
(pointed out by Kane)
<br><br>

<!-- internet searching strategies and hints content, end -->
<hr width="66%"><center> <a href="intro.htm"><img src="images/begiptit.jpg" alt="Petit image" align="bottom" width="118" height="68" border="0" vspace="0" hspace="0"></a><br><br>
<!-- how to search the web, by fravia+, signet begin -->
<table><tbody><tr><td width="300" height="2" bgcolor="#993300"></td></tr></tbody></table>   
<table><tbody><tr><td width="300" height="2" bgcolor="#993300"></td></tr></tbody></table>
(c) III Millennium: <font color="blue">[</font><a href="info.htm">fravia+</a><font color="blue"><font color="blue">]</font></font>, all rights
reserved, reversed and deserved
<!-- how to search the web, by fravia+, signet end -->


<!-- begin da closing bit, duh -->
</center>  
</ol></body></html>
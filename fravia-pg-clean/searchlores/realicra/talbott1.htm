<html>
<head>
                 <title>talbott1.htm: Can open standards suffocate us?
Some unsystematic notes on standardization</title>
                 </head></h1>

                 <BODY bgcolor="#CCCCCC" TEXT=#001010 LINK="#0000FF" ALINK="#00FF00" VLINK="#3366CC">

                 <center>

                 <a href="realicra.htm"><img SRC="../images/realicra.gif" ALT="realicra" ALIGN=BOTTOM WIDTH=114 
                 EIGHT=43 BORDER=0 VSPACE=0 HSPACE=0></a><br>
                 <font color=gray>Reality Cracking</font>
                 <hr size=2>

<H3>
Can open standards suffocate us?<br>
Some unsystematic notes on standardization
</H3><br>
<i>    by Steve Talbott</i><br>
9 January 1998<br>
<hR>Courtesy of fravia's pages of reverse engineering<br><bR>
I found great part of the following this morning on my <a
href="http://www.InsideTheWeb.com/mbs.cgi/mb155985">messageboard</a>, 
unsigned (but I know it has been  
posted from a Belgian regular contributor), as part of an interesting 
thread about the utility and/or pointlessness of colours on web pages.
<br>After having read it I immediately searched the web, convinced that 
I HAD to find such a fine essay published
 somewhere... and so I found it (on the most recent NETFUTURE newsletter: 5 
January 1999, where there are even a couple of paragraphs more, 
which were missing on my messageboard), and so I discovered 
the real name of the author as well: Steve Talbott.<br>
He published it and signed it elsewhere therefore 
there's no point in leaving this 
anonymous, and I will publish it also on my reality cracking lab since 
I believe it is 
jolly well worth reading, and very interesting from a 'reversing' point of 
view... besides, messageboards 
are ephemerical web-butterflies, with colourful but very short lives, 
fravia's r/c selected essays will -on the countrary- last for ever and 
ever :-)<br><br>A taste of it... </center>
<bR>
<font color=purple><prE>Our tendency to call software "user-friendly" (or not) indicates, I think,
an unhealthy confusion.  At least it does if we take user-friendliness to
imply more breathing room for the human being -- more room to grow and
re-vision our shared world.  As we've seen, software and standards *by
themselves* always become something of an oppressive element, something we
must learn how to transcend.  Their very nature -- especially when they
are thought to be intrinsically valuable -- is to constrain us.
</pre></fonT><center><br>
...I of course agree... it's an exquisite form of Micro$oft's bashing... :-)
<br><br>
Take your time, print this essay and
read it slowly... you'll enjoy it.
<hr></center>
<prE>

Can open standards suffocate us? ~ Some unsystematic notes on standardization

				by Steve Talbott

Amid all the passion and rhetoric about Microsoft's monopoly and the
dangers of dominant, proprietary standards for software, it's worth
pausing to look at some of the underlying issues.  These have to do with
the seemingly inevitable march of standardization as such, whether
proprietary or open.

The virtues of standardization are evident enough to everyone -- so much
so that even the proprietary sort has its defenders.  In a story about
Microsoft, the *New York Times* quotes Mike Campbell, CEO of Campbell
Software in Chicago, about the difficulty of supporting his software on
sixteen different operating systems.  "I hate it!" he says.

   So what's Campbell doing?  Helping the monopoly.  He tries to persuade
   retailers to go with Windows and make it a common platform.  "I'm
   begging for it", he says.  (Mar. 5, 1998)

Of course, truly open standards might further Campbell's cause even more
than a proprietary standard.  But what most needs recognizing today is the
way standardized software in general constrains us.  The most crucial
antagonism is not between monopolistic, proprietary standards and open
standards -- important as that tension may be.  Rather, it is between what
you might call frozen intelligence -- the kind we embed in fixed standards
of any sort -- and the fluid, re-visioning intelligence that is required
in order to avoid being imprisoned by those standards.  Yes, we need
standards, but the more thoroughly standardized our lives, the greater the
re-visioning and standard-escaping powers we require if we are to retain a
degree of expressive freedom.

Incidentally, I see no vivid distinction between software standards and
software itself.  Every piece of software is already a kind of standard,
providing a set of procedures designed to be executed over and over.  More
generally, such standards are continuous with the entire range of
specifiable forms and structures that shape our activity, from
organizational procedures to legal statutes to fixed mental habits.

                      *   *   *   *   *  *  *  *  *

Software lends a definite logical structure to our activities, however
finely articulated and multi-layered that structure may be.  The strands
of this logical web, like Lilliputian threads, can bind us equally well
regardless of whether they are spun by proprietary or open committees.
But within a healthy context where imaginative re-visioning is active, the
threads can play their part in liberating us.

When the Renaissance painters discovered the precise, mathematical methods
of linear perspective, there was an unleashing of tremendous creativity.
The rules of perspective were, at first, inseparable from a new way of
seeing the world -- a way that inspired artists like Piero della Francesca
and Leonardo da Vinci to lay the observational foundations for modern
science.

Over time, however, the fixed algorithms of linear perspective began to
feel mechanical and inhibiting, inadequate to the new visions that were
stirring artists.  (This was true of the greatest artists almost from the
start.  Michelangelo scorned the standard, geometric methods, preferring
the "compasses in the eye".)

New structures, new forms into which we can pour our personal expressions,
often do provoke a surge of creative energies.  But these forms *always*
become straitjackets with time.  Such is the essential movement of the
human spirit.  One generation's wildly unexpected expression is the next
generation's staid and stifling form -- until we somehow manage to break
out of the form.  That's why the fame of great poets is so often
posthumous:

   They have, as Shelley said, to create the taste by which they are
   appreciated; and by the time they have done so, the choice of words,
   the new meaning and manner of speech which they have brought in *must*,
   by the nature of things, be itself growing heavier and heavier, hanging
   like a millstone of authority round the neck of free expression.  We
   have but to substitute dogma for literature, and we find the same
   endless antagonism between prophet and priest.  How shall the hard rind
   not hate and detest the unembodied life that is cracking it from
   within?  How shall the mother not feel pain?  (Owen Barfield,
   "Archaism", in *Poetic Diction*)


                      *   *   *   *   *  *  *  *  *

The worrisome question today is whether the rind of silicon and logic we
are now secreting at such a furious pace will, in the end, allow any life
at all to crack it from within.  The Renaissance artists never became
unalterably dependent upon tools embodying the algorithms of linear
perspective.  As their needs changed, they did not have to layer new
software upon the old, or go in and revise millions of lines of code in
order to pry open a few degrees of freedom for themselves.  They could
simply discard the entire apparatus of perspective and go on to other
things -- such as, eventually, impressionism and abstract art.  At least,
they could do so if their own ability to re-vision the world was strong
enough.

But in many spheres of life today, realizing a new vision of the world is
not so easy.  Even if we have the necessary inner powers, we immediately
find ourselves confronting the entrenched silicon logic that so many
people liken to an external nervous system.  Objective and enduring,
ramifying with remarkable ease, penetrating every corner of society like
the filaments of a fungus in rotting fruit, this global syntax extends
itself automatically.  Not only that, but there is always strong pressure
to keep the extensions consistent with the previously established logic.

"Previously established" -- this conservatism needs reckoning with.  The
more we build upon a standard -- for example, the more software we erect
upon it -- the more entrenched and immovable the standard becomes.  We
enjoy our new efficiency and freedom *above* the standard only by reducing
our freedom in the lower domain embodied by the standard.  So as we layer
one standard vertically upon another, codifying ever higher levels of
human activity, the question arises:  how do we preserve a balance between
form and freedom, between the crystalline clarity and fixity of ice and
the dissolving fires of the imagination?

It is vastly simpler to impress algorithms upon silicon than upon the
living dynamism of human institutions.  But the more the institutions have
already adapted to the silicon, the greater the pressure to yield still
further.  We have already learned how the relatively fixed network of
roads and highways becomes a constraining factor in the evolution of
communities.  But if the highway system becomes a brute given, limiting
future choice, we have hardly begun to reckon with the infinitely more
far-reaching ways computerization can hedge in and close off our
potentials for social expression.

Look at the world of modern finance.  Once the computational structures
have been elaborated to a certain point -- with trillion-dollar money
flows traversing those structures -- it is not so easy to toss them
blithely aside and take up other forms of financial expression.  We are
already finding that as "simple" a matter as changing the New York Stock
Exchange from an "eighths" system to a decimal system can turn out to be a
major headache.

                      *   *   *   *   *  *  *  *  *

Or look at the cockpit of a jet airliner.  As the plane becomes more
software-driven and as the standard operating procedures followed by the
pilot and air traffic controller specify the pilot's actions more
minutely, the plane begins to "fly itself".  The pilot becomes more and
more superfluous.

In other words, the plane's flight increasingly becomes a strictly
technical matter.  This is possible because the pilot and passengers are
not engaged in some sort of Lewis and Clark expedition, exploring a new
landscape.  There is no need for conferring, for re-evaluating priorities
and purposes, for assessing the progress and value of the trip to date.
The pilot will not even ask the passengers whether they would like to
swoop down for a closer look at this or that sight.  All of which is just
as well, since most passengers, with their tightly structured lives, would
object to such unscheduled adventures anyway.

Just as well, yes -- although we may occasionally want to ask ourselves
whether too much of our passage through this world is taking on such a
purely technical character.  We may want to ask, that is, whether the
tight structuring of our lives has encouraged us to forget what it means
to *explore*, or to seek those dimensions where exploration is so
essential.

We may be thankful for the rule-based, predictable, and instrument-bound
flight of commercial airliners, but when we see, for example, the
classroom becoming a highly structured, merely technical undertaking --
one that can "fly by itself", without the teacher -- surely we have cause
to worry.  And here I'm referring not just to the growing role of the
computer in the classroom, but also to the close specification of the
curriculum by bureaucrats.

If there's any place where the spirit of exploration and the spirit of
re-visioning should reign, it's in the classroom.  Teacher and students
should encounter what for *both* of them holds something of the unknown --
on the teacher's part because he is engaging the subject matter "live",
right there before the students, rather than presenting what has already
been completely structured by bureaucrats, textbook authors, software, or
his own memory.

Knowledge that we've already given a definite form to -- knowledge that
can be stored and routinely transferred from one place to another --
scarcely matters in education.  Far the most important thing the students
learn from the teacher is the art of re-visioning itself (which happens to
be the one lesson it is most difficult to harness the computer to).  The
most essential act of understanding, scientific or otherwise, is the
metaphoric leap -- the "liquefaction" and unexpected re-crystallization of
the structures of knowledge, rather than the recapitulation of existing
structures.

                      *   *   *   *   *  *  *  *  *

Or, again, look at the visual arts.  I suppose most artists are working in
such fields as advertising and marketing, magazine design, and film.  It
is nearly impossible to pursue this work today without using powerful
computer software, and anyone who spends five minutes looking at magazine
ads or the graphics on the evening news can see how the tools have
directed and hemmed in the artist.

This narrowing has to do with the peculiar "vision" of the software:  a
work of art becomes a set of pixels and mathematically defined geometric
constructs, which can then be subjected to various logical
transformations.  The computer is remarkably facile at performing these
transformations, and so the most image-saturated generation in history is
endlessly assaulted by every possible visual distortion, every possible
permutation of pixels, simply because it can be done.  Little thought is
given to the intrinsic lawfulness or meaning of the image in its own
imaginal terms.

Certainly the true artist can still try to live into the qualities, say,
of the color green, and can seek the essential expressive gesture of a
plant or rock or tool.  And certainly schoolchildren can learn something
artistically deeper than the manipulation and weird deformation of clip
art.  But, meanwhile, there's a massive graphics industry, with a huge
investment in computer equipment, software, and professional training, and
there's a popular culture hooked on the ever increasing shock value of the
latest graphic sensations.  How can we gain the inner strength to flee the
torrential output of the entrenched computational algorithms?  Where can
we find the repose that would enable us to rediscover the image as a
source of fresh revelation rather than arbitrary manipulation?

An aside:  the graphic artist's pixel is a close analog of the scientist's
atom.  Both serve in practice as a prison for the imagination,
discouraging us from attending to the irreducible and always non-discrete,
non-atomistic qualities of things.  These qualities are the only possible
basis for a true science and a true art, because they are the only way the
world we explore scientifically and artistically is given to us.

                      *   *   *   *   *  *  *  *  *

I mentioned highways as a constraining factor in the evolution of
communities, and then suggested that the constraints of software may prove
still more onerous.  I'd guess many readers immediately reacted with "No,
software gives us much more flexibility.  It is easier to change bits than
to re-shape concrete."

There's a misunderstanding here.  Software does afford us greater
flexibility in the sense that, given a particular vision of some task, we
can reduce the vision with wonderful fineness of detail to a set of formal
structures in software.  But what I've been talking about is how we grow,
how we change, how we re-vision things.  On this score, it is exactly the
thoroughness and fineness of detail that is the problem.

Think of the difference between an extremely crude and bulky set of body
armor, on the one hand, and the most finely wrought, close-fitting suit of
chain mail on the other.  An elegant software package may be more like the
chain mail.  It's certainly nice to have such naturally fitting armament,
and I am in no way arguing against acquiring it.  But then we need to ask
ourselves what happens when the person inside the suit begins to grow?
The crude armor might actually allow more room for growth than the (once)
perfectly fitting mail.

However it may be with an isolated, first-try piece of software (which we
can readily discard in favor of a new try), the steady accumulation of one
software layer upon another, millions of lines upon millions of lines, is
bound to make us think twice before saying, "Gee, maybe our original
analysis wasn't the best and we need to rethink matters."  It may prove
easier to cramp our own growth in order to accommodate the billion-linked
suit of mail we have already forged for ourselves.

In many domains, I realize, it may seem forced to set software and
standard procedures against the possibilities of human growth.  Just think
of that airliner's cockpit.  Who (beside pilots) would complain about the
pilot's life being reduced to boring routine?  But it's well to remember,
at least, that the places where we've reduced something to strict
technique are the places where we've excluded the human being.

I think it's easy to overlook the significance of these ever widening
domains where everything functions mechanically, without any apparent
human implications.  The packet-switching architecture of the Net, for
example, might seem to be another such domain.  And yet, I can hardly
believe that this architecture is wholly disconnected from our increasing
willingness to conceive all human exchange as essentially a matter of
information transfer -- the movement of discrete, objective packets of
data from one place to another.  It stands to reason that the more we
become conscious of a mechanical and meaningless flow of symbols through
the world (as given in our technical visions), the more readily we
conceive our own communication in the same terms.  The influence doubtless
flows both ways:  our habits of mind take on objective form in technical
artifacts, and the artifacts in turn reinforce our habits of mind.

                      *   *   *   *   *  *  *  *  *

What is often not realized is that the possibility of genuinely new vision
always hinges upon our ability to let the old logic of our thinking and
seeing "go fluid".  If, having written a sentence, I decide that it
doesn't express quite the right shade of meaning, then -- no matter how
slight the shift of nuance I am after -- I may well end up having to
restructure the entire sentence.  And if my meaning is genuinely new, I
will have to rely in part on metaphor to suggest it.  But metaphor is,
among other things, the employment of words in violation of the previous
rules of use.  The old words and their syntax dissolve, reconstituting
themselves as a new reality.

That's just the way it always is between the living and the frozen --
between my current effort to grasp meaning, and the structures into which
I have previously poured my meanings.  Even if I use many of the same
words in my new phrasing, they will actually be different words, with
their meanings subtly altered by the new context.

This tension between logic and the play of meaning, between the syntax of
our existing vision and our powers of re-visioning, is fundamental to
human activity and thought.  And it is part of the essence of this tension
that every seeing with new eyes puts all existing syntactic structures of
understanding at risk.  We do not just juggle fixed parts on an existing
latticework of logic; rather, the parts themselves are re-imagined along
with the latticework, and reality no longer submits to analysis according
to the old scheme.

One of the symptoms that re-visioning is losing out to frozen intelligence
in the computer age is the widespread attempt to conceive change as the
mere rearrangement of existing elements.  In all true change the elements
themselves are transformed.  Merely to rearrange what already exists -- a
task the computer performs so well -- is to accept an underlying logical
structure as unalterably given.  It is to remain imprisoned within one
particular way of viewing things.  By contrast, re-visioning may well
leave *no* underlying level of form or logic completely as it was.

                      *   *   *   *   *  *  *  *  *

A computer program, considered strictly from a technical standpoint --
that is, from the computer's standpoint -- is syntax pure and simple.
There is a bedrock level of logic that just is what it is, without
possibility of re-visioning itself and the world.

To reach a place where you can talk about re-visioning, you have to widen
your view to embrace the human context:  first, there are the programmers
who develop and successively revise the program, based (possibly) on new
ways of seeing the world; second, there's the society of users, who may
(within greater or narrower limits) alter the way they relate to the
program; third, there are the non-users who nevertheless must decide how
to adapt themselves to the various ways the program shapes society.

If there's a single, dramatic fact about this human context, it's that,
within the high-tech corporation, new generations of software get cranked
out with almost no attempt at re-visioning society in any deep sense.
Technical feasibility and the extension of existing technical logic are
the overwhelmingly dominant considerations.  The next generation emerges
automatically -- the fulfillment of the dead imperative laid down by the
previous generation.

The ramification of logical structures and standards can proceed in this
automatic fashion.  Re-visioning cannot.

And, of course, it's easy to understand why re-visioning is de-emphasized.
As we've just seen, to re-vision is to let a standard syntax "go fluid".
But when that standard syntax is as expensive and as intricately
articulated as a major system of software, how can one even think of
"morphing" its bedrock structure?  By the very nature of things, there can
be no algorithm for this.  Often the only realistic alternative would be
to start from scratch.  Far easier to take the existing structure as given
and build on it.

                      *   *   *   *   *  *  *  *  *

Our tendency to call software "user-friendly" (or not) indicates, I think,
an unhealthy confusion.  At least it does if we take user-friendliness to
imply more breathing room for the human being -- more room to grow and
re-vision our shared world.  As we've seen, software and standards *by
themselves* always become something of an oppressive element, something we
must learn how to transcend.  Their very nature -- especially when they
are thought to be intrinsically valuable -- is to constrain us.

To discover user-friendliness in any deep sense -- to discover the place
of software and standards in a truly liberating context -- we have to look
at that context.  That is, if we want to see a healthier balance between
frozen intelligence and fluid, re-visioning, expressive intelligence --
then we must find it within the broader field upon which the software is
evolving.  Are we teaching programmers to engage in serious re-visioning
of the world when they modify their programs -- or are they just fixing
bugs and extending the logic of the original in an ever more fine-grained
and broadly reaching way?  Are we teaching users to re-vision the tasks
structured by the software -- or are they just hoping to rid themselves of
the awkwardnesses in the previous versions of the programs?

                      *   *   *   *   *  *  *  *  *

J. William Gurley asks,

   How do you differentiate your product if your core mission is to ensure
   that your product operates exactly as your competition?  The bottom
   line is that you don't .... Theoretically, you could have a better
   sales force or better service and support .... Yet these are the assets
   of the larger, entrenched companies.  Open standards allow large
   entrenched companies to mitigate the innovation and market share leads
   of hot young start-ups and easily move into their markets.  (*Above the
   Crowd Dispatch*, May 26, 1998)

The usual response is that companies standardize at one level and
differentiate ("innovate") above it.  This is true.  But if the same logic
drives the successive stages of competition, we will see the level of
standardization continually rise.  Ever higher levels of human functioning
will be frozen in syntax.  Either we will counter this development with
ever higher powers of re-visioning and re-structuring, or else we will
find our creative impulses progressively immobilized.

That Gurley's problem exists -- that entire industries find themselves
struggling to articulate meaningful grounds for competition -- is
profoundly symptomatic.  It suggests that these companies have reduced
their activities to a syntactically perfected meaninglessness.  Their
operations have become like those of the cockpit:  there's less and less
room for human expression.

You can see this in their products.  Look at finance again.  This may be
the field most thoroughly in the grip of software.  It is also a field
where the expression of value is extremely difficult.  Any investor who
wants his investment to *mean* something, anyone who believes that every
financial transaction is an expressive gesture helping to sculpt the kind
of family, community, and society he lives in, and who wants at least some
of his transactions to be part of a responsible and enduring connection to
the party on the other end -- such a person may well conclude that the
only reasonable course is to abandon the current, global network of
millisecond cash flows in favor of the various small, alternative
institutions.  The prevailing structures are too straitening, too reduced
to a pure syntax of number, to become a vehicle for anyone's qualitative,
personal vision of social welfare.

Much the same could be said about the production of goods lacking in
qualitative distinction and artistic quality.  But that's a topic for
another essay.

                      *   *   *   *   *  *  *  *  *

Whether we will allow new visions -- new expressions -- of the human
spirit may be the decisive question as we set chink after chink of our
global information structures in place.  The virtues of open standards are
real -- and I strongly support them.  But with another part of ourselves,
we must fight against all standards, struggling to preserve the potentials
for meaningful change in the future.  This requires us to cultivate the
kind of mental flexibility that allows us, first in our imaginations and
then in reality, to change *everything*, however subtly.

I suspect that only in the impassioned defense of such living, imaginative
powers will we find the resources to limit the siliconification of our
lives and leave a few cracks for whatever tender shoots the next
generation, beyond all prediction, sends toward the light.

<hr size=2></prE>

                 <!-- Begin mover -->
                 <center>
                 <a href="realicra.htm"><IMG SRC="../images/realicra.gif" ALT="reality cracking" 
                 ALIGN=BOTTOM WIDTH=114 HEIGHT=43 BORDER=0 VSPACE=0 HSPACE=0></a><br>
                 <font color=gray>Reality Cracking</font>
                 <br>
                 <br>
<i>You'r deep inside fravia's pages of reverse engineering, choose your way out</i><br><br>
                 <IMG SRC="../images/bulletr.gif" HEIGHT=13 WIDTH=13 ALT= red_ball>
                 <a HREF="../index.htm">entrance</a>
                 <IMG SRC="../images/bulletr.gif" HEIGHT=13 WIDTH=13 ALT= red_ball>
                 <a HREF="../links.htm">links</a>
                 <IMG SRC="../images/bulletr.gif" HEIGHT=13 WIDTH=13 ALT= red_ball>
                  ~~ 
                 <IMG SRC="../images/bulletr.gif" HEIGHT=13 WIDTH=13 ALT= red_ball>
                  ~~ 
                 <br>
                 <IMG SRC="../images/bulletr.gif" HEIGHT=13 WIDTH=13 ALT= red_ball>
                 <a HREF="../noanon.htm">anonymity</a>
                 <IMG SRC="../images/bulletr.gif" HEIGHT=13 WIDTH=13 ALT= red_ball>
                  ~~ 
                 <IMG SRC="../images/bulletr.gif" HEIGHT=13 WIDTH=13 ALT= red_ball>
                 <a HREF="../bots.htm">search bots</a>
                 <IMG SRC="../images/bulletr.gif" HEIGHT=13 WIDTH=13 ALT= red_ball>
                 <a HREF="../ideale.htm">antismut</a>
                 <IMG SRC="../images/bulletr.gif" HEIGHT=13 WIDTH=13 ALT= red_ball>
                  ~~ 
                 <br>
                 <IMG SRC="../images/bulletr.gif" HEIGHT=13 WIDTH=13 ALT= red_ball>
                 <a HREF="../main.htm">search_forms</a>
                 <IMG SRC="../images/bulletr.gif" HEIGHT=13 WIDTH=13 ALT= red_ball>
                 <a HREF="../specs.htm">specs of this site</a>
                 <IMG SRC="../images/bulletr.gif" HEIGHT=13 WIDTH=13 ALT= red_ball>
                  ~~ 
                 <IMG SRC="../images/bulletr.gif" HEIGHT=13 WIDTH=13 ALT= red_ball>
                 <a HREF="../info.htm">mail_fravia</a>
                 <br>
                 <IMG SRC="../images/bulletr.gif" HEIGHT=13 WIDTH=13 ALT= red_ball>
                  ~~ 
                 </center>
                 <!-- End mover -->

                 <HR ALIGN=CENTER WIDTH=100% SIZE=3>
                 </body>
                 </html>